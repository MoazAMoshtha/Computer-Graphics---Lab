#include <windows.h>
#include<GL/glut.h>
#include<math.h>
#include<stdio.h>
#include<iostream>


void display();
using namespace std;
float xmin = 100;
float ymin = 100;
float xmax = 700;
float ymax = 500;
float xd1, yd1, xd2, yd2;
float	xd1new, yd1new, xd2new, yd2new;

void init(void)
{		
	glClearColor(1.0, 1.0, 1.0, 0.0);
	glLineWidth(2.0);
	glClear(GL_COLOR_BUFFER_BIT);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 800, 0.0, 600);

}

int code(float x, float y)
{
	// LTRB
	// 1248
	int c = 0;
	if (y > ymax)c = 4; // T
	if (y < ymin)c = 1; // B
	if (x > xmax)c = c | 2;  // R
	if (x < xmin)c = c | 8; // L
	return c;
}



void cohen_Line(float x1, float y1, float x2, float y2)
{
	int c1 = code(x1, y1);
	int c2 = code(x2, y2);
	float m = (y2 - y1) / (x2 - x1);

	xd1new = x1;
	yd1new = y1;

	xd2new = x2;
	yd2new = y2;

	while ((c1 | c2) > 0)
	{
		if ((c1 & c2) > 0)
		{
			exit(0);
		}
		float xi = x1; float yi = y1;
		int c = c1;
		if (c == 0)
		{
			c = c2;
			xi = x2;
			yi = y2;

		}
		float x, y;
		if (c & 8)
		{
			x = xmin;
			y = yi + m * (xmin - xi);
		}
		else
			if (c & 2)
			{
				x = xmax;
				y = yi + m * (xmax - xi);
			}
			else
				if (c & 1)
				{
					y = ymin;
					x = xi + 1.0 / m * (ymin - yi);
				}
				else
					if (c & 4)
					{
						y = ymax;
						x = xi + 1.0 / m * (ymax - yi);
					}
		if (c == c1)
		{
			xd1new = x;
			yd1new = y;
			c1 = code(xd1new, yd1new);
		}
		if (c == c2)
		{
			xd2new = x;
			yd2new = y;
			c2 = code(xd2new, yd2new);
		}
	}
	display();
}



void mykey(unsigned char key, int x, int y)
{
	if (key == 'c')
	{
		cout << "Hello";
		cohen_Line(xd1, yd1, xd2, yd2);
		glFlush();
	}
}

void display()

{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(0.0, 0.0, 1.0);
	glBegin(GL_LINE_LOOP);
	glVertex2i(xmin, ymin);
	glVertex2i(xmin, ymax);
	glVertex2i(xmax, ymax);
	glVertex2i(xmax, ymin);
	glEnd();


	//	xd1new, yd1new, xd2new, yd2new;

	glColor3f(1.0, 0.0, 0.0);
	glBegin(GL_LINES);
	glVertex2i(xd1, yd1);
	glVertex2i(xd2, yd2);
	glEnd();
	glFlush();

	glColor3f(0.0, 1.0, 0.0);
	glBegin(GL_LINES);
	glVertex2i(xd1new, yd1new);
	glVertex2i(xd2new, yd2new);
	glEnd();
	
	glColor3f(0.0, 0.0, 1.0);
	glBegin(GL_LINE_LOOP);
	glVertex2i(xmin, ymin);
	glVertex2i(xmin, ymax);
	glVertex2i(xmax, ymax);
	glVertex2i(xmax, ymin);
	glEnd();
	

}

int main(int argc, char** argv){
	printf("Enter line co-ordinates:");
	cin >> xd1 >> yd1 >> xd2 >> yd2;
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(800, 600);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("Clipping");
	glutDisplayFunc(display);
	glutKeyboardFunc(mykey);
	init();
	glutMainLoop();
	return 0;

}