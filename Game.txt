#include<Windows.h>
#include<gl/GL.h>
#include<gl/glut.h>
#include <iostream>
#include <GL/glut.h>
#include <math.h>
using namespace std;




void myInit(void)
{
	glClearColor(0.95, 0.94, 0.49, 0.0);
	glPointSize(4.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 640, 0.0, 480);
}



void DrawCircle(float cx, float cy, float r, int num_segments , float R,float G,float B)
{
	
	glBegin(GL_POLYGON);
	glColor3f(R, G, B);
	for (int ii = 0; ii < num_segments; ii++)
	{
		float theta = 2.0f * 3.1415926f * float(ii) / float(num_segments);//get the current angle
	
			float x = r * cosf(theta);//calculate the x component
			float y = r * sinf(theta);//calculate the y component
			glVertex2f(x + cx, y + cy);//output vertex
		

	}
	glEnd();
}
void DrawRecti(float x1, float y1, float x2, float y2 , float R, float G, float B) {
	glColor3f(R, G, B);
	glRecti(x1, y1, x2, y2);
}

void Game() {
	glClear(GL_COLOR_BUFFER_BIT);
	DrawCircle(320, 290, 180, 50 , 0.94, 0.36, 0.37);
	DrawRecti(500, 290, 140, 100, 0.94, 0.36, 0.37);
	DrawCircle(180, 100, 40, 50, 0.94, 0.36, 0.37);
	DrawCircle(320, 100, 40, 50,  0.94, 0.36, 0.37);
	DrawCircle(460, 100, 40, 50,  0.94, 0.36, 0.37);
	DrawCircle(400, 280, 50, 50,  1.0, 1.0, 1.0);//EyesWhite
	DrawCircle(400, 280, 25, 50,  0.20, 0.20, 0.60);//Eyes
	DrawCircle(240, 280, 50, 50, 1.0, 1.0, 1.0);//EyesWhite
	DrawCircle(240, 280, 25, 50, 0.20, 0.20, 0.60);//Eyes
	glFlush();
}

void main(int argc, char** argv)
{

	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(640, 480);
	glutInitWindowPosition(50, 50);
	glutCreateWindow("Game");
	glutDisplayFunc(Game);
	myInit();
	glutMainLoop();

}
